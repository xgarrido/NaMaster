name: Build wheels and upload to PyPI

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.cp }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
        cp:
          - cp37
          - cp38
          - cp39
          - cp310
          - cp311

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        env:
          CIBW_BEFORE_ALL_LINUX: apt-get -y update && apt-get -y install libcfitsio-dev libgsl-dev libfftw3-dev wget; gcc --version; autoreconf --version
          CIBW_BEFORE_BUILD: python -m pip install numpy
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BUILD: "${{ matrix.cp }}-*x86_64"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_24
          CIBW_MANYLINUX_I686_IMAGE: manylinux_2_24

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          retention-days: 1

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.8'

      - name: Apt packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libfftw3-dev

      - name: Build sdist
        run: |
          python -m pip install numpy
          python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
          retention-days: 1

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          # To test: repository_url: https://test.pypi.org/legacy/
